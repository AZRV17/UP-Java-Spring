create table public.author
(
    id         bigint generated by default as identity
        primary key,
    birth_date date,
    name       varchar(255) not null
);

alter table public.author
    owner to postgres;

create table public.genre
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        constraint ukctffrbu4484ft8dlsa5vmqdka
            unique
);

alter table public.genre
    owner to postgres;

create table public.publisher
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        constraint ukh9trv4xhmh6s68vbw9ba6to70
            unique
);

alter table public.publisher
    owner to postgres;

create table public.book
(
    id               bigint generated by default as identity
        primary key,
    isbn             varchar(255) not null
        constraint ukehpdfjpu1jm3hijhj4mm0hx9h
            unique,
    publication_date date,
    title            varchar(255) not null,
    publisher_id     bigint
        constraint fkgtvt7p649s4x80y6f4842pnfq
            references public.publisher
);

alter table public.book
    owner to postgres;

create table public.book_authors
(
    books_id   bigint not null
        constraint fkmuhqocx8etx13u6jrtutnumek
            references public.book,
    authors_id bigint not null
        constraint fk551i3sllw1wj7ex6nir16blsm
            references public.author
);

alter table public.book_authors
    owner to postgres;

create table public.book_genres
(
    books_id  bigint not null
        constraint fklbdkit5k0gr9g1w5l791qcamg
            references public.book,
    genres_id bigint not null
        constraint fkkemwddl6cxkebe21lsqa2ob4q
            references public.genre
);

alter table public.book_genres
    owner to postgres;

create table public.role
(
    id   bigint generated by default as identity
        primary key,
    name varchar(255) not null
        constraint uk8sewwnpamngi6b1dwaa88askk
            unique
);

alter table public.role
    owner to postgres;

create table public.model_user
(
    id           bigint generated by default as identity
        primary key,
    email        varchar(255),
    login        varchar(255) not null,
    password     varchar(255) not null,
    phone_number varchar(255),
    role_id      bigint
        constraint fknldrjxe65t75ccr0c0lusuox9
            references public.role
);

alter table public.model_user
    owner to postgres;

create table public.loan
(
    id            bigint generated by default as identity
        primary key,
    loan_date     date,
    return_date   date,
    book_id       bigint
        constraint fk88c0ydlo57pcgp137tntrgqx1
            references public.book,
    user_id       bigint,
    model_user_id bigint
        constraint fkls2jscmgvmirul29q89et7np2
            references public.model_user
);

alter table public.loan
    owner to postgres;

create table public.review
(
    id            bigint generated by default as identity
        primary key,
    comment       varchar(500),
    rating        integer not null
        constraint review_rating_check
            check ((rating <= 5) AND (rating >= 1)),
    book_id       bigint
        constraint fk70yrt09r4r54tcgkrwbeqenbs
            references public.book,
    user_id       bigint,
    model_user_id bigint
        constraint fkb47tr5s1g9dnunj8moge2id9n
            references public.model_user
);

alter table public.review
    owner to postgres;

-- Create
INSERT INTO public.author (birth_date, name) VALUES ('YYYY-MM-DD', 'Author Name');

-- Read
SELECT * FROM public.author WHERE id = ?;

-- Update
UPDATE public.author SET birth_date = 'YYYY-MM-DD', name = 'Updated Author Name' WHERE id = ?;

-- Delete
DELETE FROM public.author WHERE id = ?;

-- Create
INSERT INTO public.genre (name) VALUES ('Genre Name');

-- Read
SELECT * FROM public.genre WHERE id = ?;

-- Update
UPDATE public.genre SET name = 'Updated Genre Name' WHERE id = ?;

-- Delete
DELETE FROM public.genre WHERE id = ?;

-- Create
INSERT INTO public.publisher (name) VALUES ('Publisher Name');

-- Read
SELECT * FROM public.publisher WHERE id = ?;

-- Update
UPDATE public.publisher SET name = 'Updated Publisher Name' WHERE id = ?;

-- Delete
DELETE FROM public.publisher WHERE id = ?;

-- Create
INSERT INTO public.book (isbn, publication_date, title, publisher_id)
VALUES ('ISBN-12345', 'YYYY-MM-DD', 'Book Title', publisher_id);

-- Read
SELECT * FROM public.book WHERE id = ?;

-- Update
UPDATE public.book SET isbn = 'New ISBN', publication_date = 'YYYY-MM-DD', title = 'Updated Book Title', publisher_id = publisher_id WHERE id = ?;

-- Delete
DELETE FROM public.book WHERE id = ?;

-- Create
INSERT INTO public.book_authors (books_id, authors_id) VALUES (book_id, author_id);

-- Read
SELECT * FROM public.book_authors WHERE books_id = ? AND authors_id = ?;

-- Update (usually not needed as it’s a linking table)

-- Delete
DELETE FROM public.book_authors WHERE books_id = ? AND authors_id = ?;

-- Create
INSERT INTO public.book_genres (books_id, genres_id) VALUES (book_id, genre_id);

-- Read
SELECT * FROM public.book_genres WHERE books_id = ? AND genres_id = ?;

-- Update (usually not needed as it’s a linking table)

-- Delete
DELETE FROM public.book_genres WHERE books_id = ? AND genres_id = ?;

-- Create
INSERT INTO public.role (name) VALUES ('Role Name');

-- Read
SELECT * FROM public.role WHERE id = ?;

-- Update
UPDATE public.role SET name = 'Updated Role Name' WHERE id = ?;

-- Delete
DELETE FROM public.role WHERE id = ?;

-- Create
INSERT INTO public.model_user (email, login, password, phone_number, role_id)
VALUES ('user@example.com', 'login', 'password', '123-456-7890', role_id);

-- Read
SELECT * FROM public.model_user WHERE id = ?;

-- Update
UPDATE public.model_user SET email = 'newemail@example.com', login = 'newlogin', password = 'newpassword', phone_number = 'newphone', role_id = role_id WHERE id = ?;

-- Delete
DELETE FROM public.model_user WHERE id = ?;

-- Create
INSERT INTO public.loan (loan_date, return_date, book_id, model_user_id)
VALUES ('YYYY-MM-DD', 'YYYY-MM-DD', book_id, user_id);

-- Read
SELECT * FROM public.loan WHERE id = ?;

-- Update
UPDATE public.loan SET loan_date = 'YYYY-MM-DD', return_date = 'YYYY-MM-DD', book_id = book_id, model_user_id = user_id WHERE id = ?;

-- Delete
DELETE FROM public.loan WHERE id = ?;

-- Create
INSERT INTO public.review (comment, rating, book_id, model_user_id)
VALUES ('Great book!', 5, book_id, user_id);

-- Read
SELECT * FROM public.review WHERE id = ?;

-- Update
UPDATE public.review SET comment = 'Updated Comment', rating = 4, book_id = book_id, model_user_id = user_id WHERE id = ?;

-- Delete
DELETE FROM public.review WHERE id = ?;
